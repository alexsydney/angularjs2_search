{"version":3,"sources":["services/book-item.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAIA,uEAAuE;YAEvE;gBAoEE;oBAlEA,qFAAqF;oBACrF,UAAK,GAAwB;wBAC3B,IAAI,+BAAa,CAAC,UAAU,EAAE,aAAa,EAAE,oBAAoB,EAAE,CAAC,CAAC;wBACrE,IAAI,+BAAa,CAAC,YAAY,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,CAAC,CAAC;qBAC9E,CAAC,CAAC,qBAAqB;gBA8DT,CAAC;gBA5DhB,6BAAG,GAAH;oBACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpB,CAAC;gBAED,6BAAG,GAAH,UAAI,OAA0B;oBAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC;oBAEtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzB,iDAAiD;oBACjD,yCAAyC;gBAC3C,CAAC;;gBAED,kCAAkC;gBAClC,sCAAY,GAAZ,UAAa,SAAiB,EAAE,YAA+B;oBAC7D,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,SAAS,CAAC,CAAC;oBAElD,sFAAsF;oBACtF,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;oBAE3C,0DAA0D;oBAC1D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,SAAS,CAAC;oBAEjC,+DAA+D;gBACjE,CAAC;;gBAED;;;mBAGG;gBACK,8BAAI,GAAZ,UAAa,KAAK,EAAE,QAAQ,EAAE,QAAQ;oBACpC,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC3B,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChC,CAAC;oBACD,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxD,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBAED;;;;mBAIG;gBACH,gCAAM,GAAN,UAAO,YAA+B;oBACpC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,YAAY,CAAC,CAAC;oBAE9C,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;oBAE3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAEhD,2CAA2C;oBAE3C,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;oBAEjB,iBAAiB;oBACjB,+BAA+B;oBAC/B,kBAAkB;oBAClB,+BAA+B;oBAC/B,KAAK;gBACP,CAAC;gBAnEH;oBAAC,iBAAU,EAAE;;mCAAA;gBAsEb,sBAAC;YAAD,CArEA,AAqEC,IAAA;YArED,6CAqEC,CAAA","file":"services/book-item.service.js","sourcesContent":["import {Injectable} from \"angular2/core\";\nimport {BookItemInterface} from \"../interfaces/book-item.interface\";\nimport {BookItemModel} from \"../models/book-item.model\";\n\n// Service to abstract common methods. Best practice use of @Injectable\n@Injectable()\nexport class BookItemService {\n\n  // Create instances of book item data model in accordance with defined interface type\n  books: BookItemInterface[] = [\n    new BookItemModel(\"El Pooch\", \"Alex Nelson\", \"images/elpooch.jpg\", 1),\n    new BookItemModel(\"The Flight\", \"Scott Masterson\", \"images/theflight.jpg\", 2)\n  ]; // Array of Book Type\n\n  get() {\n    return this.books;\n  }\n\n  add(newBook: BookItemInterface) {\n    console.log(\"Added Book: \" + newBook);\n\n    this.books.push(newBook);\n    // TODO - Automatically sort the books when added\n    // this.books = [...this.books, newBook];\n  };\n\n  // Update star rating of book item\n  updateRating(newRating: number, existingBook: BookItemInterface) {\n    console.log(\"Added Updated Rating: \" + newRating);\n\n    // Obtain the array index of the book item for which we want to update its star rating\n    const i = this.books.indexOf(existingBook);\n\n    // Assign new rating as value of rating property for index\n    this.books[i].rating = newRating;\n\n    // console.log(\"Updated Books: \" + JSON.stringify(this.books));\n  };\n\n  /**\n   * Move array item from old index position to the\n   * right-most position in given array\n   */\n  private move(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n        newIndex = array.length - 1;\n    }\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n  /**\n   * Remove an item from the array by moving it to the\n   * end of the array and then popping it. This avoids\n   * leaving null elements in the array when using splice.\n   */\n  remove(bookToRemove: BookItemInterface) {\n    console.log(\"Removing Book: \" + bookToRemove);\n\n    const i = this.books.indexOf(bookToRemove);\n\n    this.move(this.books, i, this.books.length - 1);\n\n    // console.log(JSON.stringify(this.books));\n\n    this.books.pop();\n\n    // this.books = [\n    //   ...this.books.slice(0, i),\n    //   bookToRemove,\n    //   ...this.books.slice(i + 1)\n    // ];\n  }\n\n  constructor() {}\n}\n"],"sourceRoot":"/source/"}
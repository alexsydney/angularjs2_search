{"version":3,"sources":["components/book-rating.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAeA;gBAAA;oBAGC,+DAA+D;oBACxC,eAAU,GAAG,IAAI,mBAAY,EAAE,CAAC;oBAE9C,UAAK,GAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAUjD,CAAC;gBARC,uBAAM,GAAN,UAAO,KAAK;oBACV,OAAO,CAAC,GAAG,CAAC,8CAA8C,GAAG,KAAK,CAAC,CAAC;oBACpE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBAEpB,gDAAgD;oBAChD,yCAAyC;oBACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC;gBAdD;oBAAC,YAAK,EAAE;;oDAAA;gBAGR;oBAAC,aAAM,CAAC,YAAY,CAAC;;0DAAA;gBAjBvB;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,sWAQT;qBACF,CAAC;;0BAAA;gBAkBF,aAAC;YAAD,CAhBA,AAgBC,IAAA;YAhBD,2BAgBC,CAAA","file":"components/book-rating.component.js","sourcesContent":["import {Component, Input, Output, EventEmitter} from \"@angular/core\";\n\n@Component({\n  selector: \"rating\",\n  template: `\n    <span tabindex=\"0\">\n      <template ngFor let-item=\"$implicit\" [ngForOf]=\"range\" let-i=\"index\">\n        <span class=\"sr-only\">({{ i < rate ? '*' : ' ' }})</span>\n        <i class=\"glyphicon\" (click)=\"update(i + 1)\"\n          [ngClass]=\"i < rate ? 'glyphicon-star' : 'glyphicon-star-empty'\"></i>\n      </template>\n    </span>\n  `\n})\n\nexport class Rating {\n  @Input() private rate: number;\n\n\t// Set property to event emitter object. Local Alias updateRate\n  @Output(\"updateRate\") rateChange = new EventEmitter();\n\n  private range: Array<number> = [1, 2, 3, 4, 5];\n\n  update(value) {\n    console.log(\"Updated Rating (via Book Rating Component): \" + value);\n    this.rate = value;\n\n\t\t// Emit an event each time user clicks a star to\n\t\t// update the rate by pushing a new value\n    this.rateChange.next(value);\n  }\n}"],"sourceRoot":"/source/"}